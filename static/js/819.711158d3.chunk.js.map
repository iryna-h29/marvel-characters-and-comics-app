{"version":3,"file":"static/js/819.711158d3.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img}\r\n        style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: \"0 auto\"}}\r\n        alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport './comicsList.scss';\r\nimport uw from '../../resources/img/UW.png';\r\nimport xMen from '../../resources/img/x-men.png';\r\nimport { Component, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Spinner/>;\r\n            break;\r\n        case 'loading':\r\n            return newItemLoading ? <Component/> : <Spinner/>;\r\n            break;\r\n        case 'confirmed':\r\n            return <Component/>;\r\n            break;\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n            break;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nconst ComicsList = (props) => {\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsLoaded)\r\n            .then(() => setProcess('confirmed'))\r\n    }\r\n\r\n    const onComicsLoaded = (newList) => {\r\n        let ended = false;\r\n        if (newList.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicsList(comicsList => [...comicsList, ...newList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    const renderItems = arr => {\r\n        const items = arr.map((item, i) => {\r\n            return (\r\n                <ComicsItem key={i} item={item}/>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\r\n            <button className=\"button button__main button__long\" \r\n                onClick={() => onRequest(offset)} \r\n                disabled={newItemLoading}\r\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\r\n                >\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ComicsItem = ({item}) => {\r\n    const {id, name, thumbnail, price} = item;\r\n\r\n    return (    \r\n        <li className=\"comics__item\" tabIndex={0} >\r\n            <Link to={`/comics/${id}`}>\r\n                <img src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                <div className=\"comics__item-name\">{name}</div>\r\n                <div className=\"comics__item-price\">{price}</div>\r\n            </Link>\r\n        </li>\r\n    )\r\n    \r\n\r\n}\r\n \r\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"Page with list of all comics\"\r\n                        />\r\n                    <title>Comics</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","img","style","display","width","height","objectFit","margin","setContent","process","Component","newItemLoading","Spinner","Error","ComicsItem","_ref","item","id","name","thumbnail","price","tabIndex","Link","to","props","comicsList","setComicsList","useState","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","error","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsLoaded","newList","ended","length","arr","items","map","i","renderItems","onClick","disabled","ComicsPage","_Fragment","Helmet","content","ComicsList"],"sourceRoot":""}